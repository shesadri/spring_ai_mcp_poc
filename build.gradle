plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M1")
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    
    // Spring AI Dependencies
    implementation "org.springframework.ai:spring-ai-openai-spring-boot-starter:${springAiVersion}"
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Annotation Processors
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Custom tasks
task runDev(type: JavaExec) {
    description = 'Run the application with dev profile'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.springaimcp.SpringAiMcpApplication'
    args = ['--spring.profiles.active=dev']
}

task runProd(type: JavaExec) {
    description = 'Run the application with prod profile'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.springaimcp.SpringAiMcpApplication'
    args = ['--spring.profiles.active=prod']
}

// Bootjar configuration
jar {
    enabled = false
    archiveClassifier = ''
}

bootJar {
    enabled = true
    archiveClassifier = ''
    mainClass = 'com.example.springaimcp.SpringAiMcpApplication'
}
